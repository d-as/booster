{"version":3,"sources":["components/card-handler.ts","components/Card.tsx","report-web-vitals.ts","App.tsx","index.tsx"],"names":["cardRef","card","current","cardLayer","querySelector","firstChild","removeChild","container","document","createElement","shine","shadow","layers","className","layer","imageSource","getAttribute","style","backgroundImage","appendChild","forEach","child","transform","clientWidth","listeners","mouseMove","event","element","pageX","pageY","offsets","getBoundingClientRect","width","height","clientHeight","widthMultiple","offsetX","left","window","scrollX","offsetY","top","scrollY","dy","dx","rotateY","imageStyles","angle","Math","atan2","PI","HTMLElement","includes","push","join","shineAlpha","background","mouseEnter","classList","add","mouseLeave","remove","cssText","addEventListener","Card","src","onClick","useRef","useState","undefined","setListeners","removed","setRemoved","destroy","removeEventListener","removeCard","useEffect","cardHandler","ref","data-img","defaultProps","onPerfEntry","pullCards","count","min","max","Array","from","Set","map","floor","random","rng","id","key","uniqid","App","reset","cards","setCards","splice","findIndex","length","ReactDOM","render","getElementById","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB"],"mappings":"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","file":"static/js/main.0e3e2157.chunk.js","sourcesContent":["// https://codepen.io/robin-dela/pen/jVddbq\r\n\r\nimport { RefObject } from 'react';\r\n\r\nexport interface CardListeners {\r\n  mouseMove: EventListener\r\n  mouseEnter: EventListener\r\n  mouseLeave: EventListener\r\n}\r\n\r\nconst CARD_WIDTH = 250;\r\n\r\nconst mouseMove = (\r\n  event: MouseEvent,\r\n  element: HTMLElement,\r\n  shine: HTMLDivElement,\r\n): void => {\r\n  const { pageX, pageY } = event;\r\n  const offsets = element.getBoundingClientRect();\r\n  const width = element.clientWidth;\r\n  const height = element.clientHeight;\r\n  const widthMultiple = CARD_WIDTH / width;\r\n  const offsetX = 0.52 - (pageX - offsets.left - window.scrollX) / width;\r\n  const offsetY = 0.52 - (pageY - offsets.top - window.scrollY) / height;\r\n  const dy = (pageY - offsets.top - window.scrollY) - height / 2;\r\n  const dx = (pageX - offsets.left - window.scrollX) - width / 2;\r\n  const rotateX = (dy - offsetY) * (0.1 * widthMultiple);\r\n  const rotateY = (offsetX - dx) * (0.07 * widthMultiple);\r\n  const imageStyles = [`rotateX(${rotateX}deg) rotateY(${rotateY}deg)`];\r\n  const angleRadians = Math.atan2(dy, dx);\r\n  let angle = (angleRadians * 180) / Math.PI - 90;\r\n\r\n  if (angle < 0) {\r\n    angle += 360;\r\n  }\r\n\r\n  if (element.firstChild instanceof HTMLElement && element.firstChild.className.includes(' over')) {\r\n    imageStyles.push('scale3d(1.07, 1.07, 1.07)');\r\n  }\r\n\r\n  if (element.firstChild instanceof HTMLElement) {\r\n    // eslint-disable-next-line no-param-reassign\r\n    element.firstChild.style.transform = imageStyles.join(' ');\r\n  }\r\n\r\n  const shineAlpha = ((pageY - offsets.top - window.scrollY) / height) * 0.4;\r\n\r\n  // eslint-disable-next-line no-param-reassign\r\n  shine.style.background = `linear-gradient(${angle}deg, rgba(255, 255, 255, ${shineAlpha}) 0%, rgba(255, 255, 255, 0) 80%)`;\r\n\r\n  // eslint-disable-next-line no-param-reassign\r\n  shine.style.transform = `translateX(${offsetX - 0.1}px) translateY(${offsetY - 0.1}px)`;\r\n};\r\n\r\nconst mouseEnter = (element: HTMLElement): void => {\r\n  if (element.firstChild instanceof HTMLElement) {\r\n    element.firstChild.classList.add('over');\r\n  }\r\n};\r\n\r\nconst mouseLeave = (\r\n  element: HTMLDivElement, layer: HTMLDivElement, shine: HTMLDivElement,\r\n): void => {\r\n  const container = element.firstChild;\r\n\r\n  if (container instanceof HTMLElement) {\r\n    container.classList.remove('over');\r\n    container.style.transform = '';\r\n  }\r\n\r\n  // eslint-disable-next-line no-param-reassign\r\n  shine.style.cssText = '';\r\n\r\n  // eslint-disable-next-line no-param-reassign\r\n  layer.style.transform = '';\r\n};\r\n\r\nexport const removeCard = (cardRef: RefObject<HTMLDivElement>, listeners?: CardListeners): void => {\r\n  const card = cardRef.current;\r\n\r\n  if (card && listeners) {\r\n    card.removeEventListener('mousemove', listeners.mouseMove);\r\n    card.removeEventListener('mouseenter', listeners.mouseEnter);\r\n    card.removeEventListener('mouseleave', listeners.mouseLeave);\r\n  }\r\n};\r\n\r\nexport default (cardRef: RefObject<HTMLDivElement>): CardListeners | undefined => {\r\n  const card = cardRef.current;\r\n  const cardLayer = card?.querySelector('.card-layer');\r\n\r\n  if (!card || !cardLayer) {\r\n    return undefined;\r\n  }\r\n\r\n  while (card.firstChild) {\r\n    card.removeChild(card.firstChild);\r\n  }\r\n\r\n  const container = document.createElement('div');\r\n  const shine = document.createElement('div');\r\n  const shadow = document.createElement('div');\r\n  const layers = document.createElement('div');\r\n\r\n  container.className = 'card-container';\r\n  shine.className = 'card-shine';\r\n  shadow.className = 'card-shadow';\r\n\r\n  const layer = document.createElement('div');\r\n  const imageSource = cardLayer.getAttribute('data-img');\r\n\r\n  layer.className = 'card-rendered-layer';\r\n  layer.style.backgroundImage = `url(${imageSource})`;\r\n\r\n  layers.appendChild(layer);\r\n  card.appendChild(container);\r\n  [shadow, layers, shine].forEach(child => container.appendChild(child));\r\n\r\n  card.style.transform = `perspective(${card.clientWidth * 3}px)`;\r\n\r\n  const listeners: CardListeners = {\r\n    mouseMove: event => mouseMove(event as MouseEvent, card, shine),\r\n    mouseEnter: () => mouseEnter(card),\r\n    mouseLeave: () => mouseLeave(card, layer, shine),\r\n  };\r\n\r\n  card.addEventListener('mousemove', listeners.mouseMove);\r\n  card.addEventListener('mouseenter', listeners.mouseEnter);\r\n  card.addEventListener('mouseleave', listeners.mouseLeave);\r\n\r\n  return listeners;\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport cardHandler, { CardListeners, removeCard } from './card-handler';\r\nimport '../styles/Card.scss';\r\n\r\ninterface CardProps {\r\n  src: string\r\n  onClick?: (removeCard: Function) => void\r\n}\r\n\r\nconst Card = ({ src, onClick }: CardProps): JSX.Element | null => {\r\n  const cardRef = useRef<HTMLDivElement>(null);\r\n  const [listeners, setListeners] = useState<CardListeners | undefined>(undefined);\r\n  const [removed, setRemoved] = useState(false);\r\n\r\n  const destroy = (): void => {\r\n    removeCard(cardRef, listeners);\r\n    setRemoved(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setListeners(cardHandler(cardRef));\r\n    return () => destroy();\r\n  }, []);\r\n\r\n  const clickHandler = (): void => (\r\n    onClick?.(() => destroy())\r\n  );\r\n\r\n  if (removed) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      ref={cardRef}\r\n      onClick={clickHandler}\r\n      className=\"cover card\"\r\n    >\r\n      <div\r\n        className=\"card-layer\"\r\n        data-img={src}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nCard.propTypes = {\r\n  src: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nCard.defaultProps = {\r\n  onClick: undefined,\r\n};\r\n\r\nexport default Card;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nexport default (onPerfEntry?: ReportHandler): void => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n","import { useState } from 'react';\r\nimport uniqid from 'uniqid';\r\nimport Card from './components/Card';\r\nimport './styles/App.scss';\r\n\r\ninterface CardData {\r\n  id: string\r\n  key: string\r\n}\r\n\r\nconst rng = (min: number, max: number): number => (\r\n  Math.floor(Math.random() * (max - min + 1) + min)\r\n);\r\n\r\nconst pullCards = (count: number, min: number, max: number): CardData[] => (\r\n  Array.from(new Set([...Array(count)].map(() => rng(min, max))))\r\n    .map(id => ({\r\n      id: `${id}`,\r\n      key: uniqid(),\r\n    }))\r\n);\r\n\r\nconst baseURL = 'https://assets.pokemon.com/assets/cms2/img/cards/web/XY12/XY12_EN_';\r\n\r\nconst App = (): JSX.Element => {\r\n  const reset = (): CardData[] => pullCards(8, 1, 113);\r\n\r\n  const [cards, setCards] = useState(reset());\r\n\r\n  const onClick = (key: string, removeCard: Function): void => {\r\n    removeCard();\r\n    cards.splice(cards.findIndex(card => card.key === key), 1);\r\n    setCards(cards.length ? cards : reset());\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <header className=\"app-header\">\r\n      </header>\r\n      <main className=\"app-content\">\r\n        {cards.map(card => (\r\n          <Card\r\n            key={card.key}\r\n            onClick={removeCard => onClick(card.key, removeCard)}\r\n            src={`${baseURL}${card.id}.png`}\r\n          />\r\n        ))}\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { StrictMode } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './report-web-vitals';\r\nimport './styles/index.scss';\r\n\r\nReactDOM.render(\r\n  <StrictMode>\r\n    <App />\r\n  </StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}